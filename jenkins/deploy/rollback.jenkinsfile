/*
Rolls back to the previous version for a environment.

This job figures out what was the previous version and then starts a normal deploy.

Note that you can only rollback once.
*/
master_versions_location_base = """gs://fdk-infra-masterversions"""
import org.jenkinsci.plugins.workflow.cps.CpsThread
import org.jenkinsci.plugins.workflow.actions.LabelAction

// A hack to create a named script output stage.  For some reason Jenkins
// does not want to name script steps, so this hack is used.
// ref: https://stackoverflow.com/questions/39414921/jenkins-pipeline-sh-display-name-label
def script_wrapper(def Map vars) {
  def script = vars["script"]
  def stepName = vars["stepName"]
  def returnStatus = vars.get("returnStatus")
  def output
  try{
      if (returnStatus) {
        def inner = sh(script: script,returnStatus: true)
        output = inner
      } else {
        def inner = sh(script: script,returnStdout: true)
        output = inner
      }
  } finally {
      CpsThread.current().head.get().addAction(new LabelAction("Shell script ${stepName} "))
  }
  return output
}


echo "Rolling back to previous version for env " + params.rollback_environment
String masterversion = "unknown"
node ('helm-kubectl'){
  container('helm-gcloud-kubectl') {
    stage('Get rollback version') {
      def output = script_wrapper( stepName: "Getting rollback version",
                      script: "gsutil ls ${master_versions_location_base}/deployed/${params.rollback_environment}/rollback",
                      returnStdout: true)
      def files = output.tokenize( '\n' )
      if (files.size() == 1) {
        echo "found: " + files[0]
        def result = (files[0] =~ /^.*rollback\/(.+)\.yaml$/)
        if (result) {
          masterversion = result[0][1]
          echo "found: " + masterversion
        }
      } else {
        files.each{
          echo it
        }
        error("Unable to rollback.  Not able to find a single rollbackversion.  Found: " + files.size())
      }
    }
  }
}

stage("Notify slack") {
  slackSend   channel: '#jenkins',
              color: 'warning',
              message: "Rollback started on ${params.rollback_environment} to version: ${masterversion}"
}

stage('Trigger deploy job') {
    build job: 'deploy-development', parameters: [[$class: 'StringParameterValue', name: 'deploy_environment', value: params.rollback_environment],
                                                  [$class: 'StringParameterValue', name: 'masterversion', value: masterversion]]
}
